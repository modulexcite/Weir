Weir
=======================

Components:
Reader - main class instantiates others
Hound - fetches RSS on a timer, dispatches events with new counts when the fetch concludes
Database.js - tech-specific database layer, start with pgsql
Console - logs out to a file (eventually) or to stdout (currently)
Config - key/value store loaded from JSON
Server - HTTP requests and AJAX calls
Stream - Registers stream-related routes/logic
Feeds - Registers feed-related routes/logic
Manos - utility functions for async without importing all of caolan's library
Freedom - import/export, starting with OPML
Security - Manage sessions, TOTP authorization

Client components (all namespaced as "Weir.*"):
StreamController - handle stream display and UI, plus some app-level UI
SettingsController - handle showing and saving settings, plus showing security warning
FeedController - handle (un)subscribing, tagging
DisplayStack - manage major component visibility, dialogs, errors, warnings
Events - service for pubsub events, useful for scrolling and service notification
LocalSettings - Client-side preferences
Request - Wraps requests to handle security authorization and errors
Sanitize - Removes scripts, unwanted styles, defers images
Scroll - Throttles scroll events, provides scroll visibility directives
Server - Handles AJAX API and primary stream model
Main - contains primary app seed, random directives

Notes (vaguely ordered):

 - UX
  * make all buttons bigger on mobile
  * add close button to hide activated items
  * Add 3D transformations to make things interesting once Angular.animate lands in stable
  * Consider moving CSS to something like TopCoat for a more polished look
  
 - DisplayStack improvements
  * DisplayStack.dialog(), DisplayStack.confirm()

 - Feed management improvements
  * Enable sorting of feeds by result, name, tag (eventually)
  * Be able to set update frequencies per feed

 - Logging:
  * Add different log levels and tagging

 - Remove CSS compilation from the Server, consider other handlers
  * maybe just move handlers into a separate module.

 - Add ability to write server cfg.json with .save();

 - Weir.Sanitize improvements
  * Add rudimentary ad/social blocking

 - Add to options service
  * key map - character/code to verb, will need to work out UI for that
  * list length
  * buttons on sidebar

 - Configure router to support REST params
 
 - Add SQLite support
